/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

 https://leetcode.com/problems/remove-linked-list-elements/submissions/
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        
        if(head==NULL)
            return NULL;
       
        if(head->next==NULL && head->val==val)
        {
            return NULL;
        }
       
        
     
         ListNode* temp=head->next;
        ListNode* prev=head;
        while(temp!=NULL)
        {
            
           if( temp->val==val)
           {
             prev->next=temp->next;
               ListNode* del=temp;
               temp=temp->next;
               del->next=NULL;
               delete del;
           }
            else{
             prev=temp;
            temp=temp->next;
                
            }
           
           
        } 
         if(head->val==val)
        {
            ListNode* d=head;
            head=head->next;
            delete d;
            
            
        }
        return head;
        
    }
};